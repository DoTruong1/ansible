---
# tasks file for common
- name: Check if Docker is installed
  command: docker --version
  register: docker_installed
  ignore_errors: true

- name: Install Docker
  block:
    - name: Install Docker repository prerequisites
      apt:
        name:
          - ca-certificates
          - curl
          - python3
          - python3-pip
        state: present
        update_cache: yes

    - name: Create Docker APT keyring directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"

    - name: Download Docker GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: "0644"

    - name: Add Docker repository to APT sources
      apt_repository:
        repo: "deb [arch={{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    # - name: Update APT cache
    #   apt_get:
    #     update_cache: yes
    - name: Run the equivalent of "apt-get update" as a separate step
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Docker CE
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        update_cache: "yes"

    - name: check docker is active
      service:
        name: docker
        state: started
        enabled: yes
    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present
    - name: adding ubuntu to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes
  when: docker_installed.failed
- name: Run the equivalent of "apt-get update" as a separate step
  ansible.builtin.apt:
    update_cache: yes

- name: Install required Python libraries
  pip:
    name:
      - requests < 2.29.0
      - urllib3<2.0
      - docker==6.1.3
      - docker-compose
    state: present

- name: Update /etc/hosts
  become: true
  blockinfile:
    path: /etc/hosts
    create: yes
    block: |
      127.0.0.1 localhost

      # The following lines are desirable for IPv6 capable hosts
      ::1 ip6-localhost ip6-loopback
      fe00::0 ip6-localnet
      ff00::0 ip6-mcastprefix
      ff02::1 ip6-allnodes
      ff02::2 ip6-allrouters
      ff02::3 ip6-allhosts

      {% for item in ansible_play_batch %}
      {{ hostvars[item].ansible_host }}   {{ item }}.home.arpa    
      {% endfor %}
